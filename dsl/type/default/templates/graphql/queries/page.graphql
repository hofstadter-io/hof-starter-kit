{{#with DslContext as |TYPE|}}
{{#with (camelT TYPE.name) as |TypeName|}}
{{#with (camel  TYPE.name) as |typeName|}}
#import "../fragments/type-nested.graphql"

query {{typeName}}Page(
  {{#each TYPE.relations as |RELATION|}}
  {{#if (eq RELATION.relation "belongs-to-one")}}
  ${{camel RELATION.name}}Id: Int,
  {{/if}}
  {{/each}}
  $limit: Int!, $after: Int
) {
  {{typeName}}Page(
    {{#each TYPE.relations as |RELATION|}}
    {{#if (eq RELATION.relation "belongs-to-one")}}
    {{camel RELATION.name}}Id: ${{camel RELATION.name}}Id,
    {{/if}}
    {{/each}}
    limit: $limit, after: $after
  ) {
    count
    edges {
      cursor
      node {
        ...{{TypeName}}InfoNested
      }
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}
{{/with}}
{{/with}}
{{/with}}
